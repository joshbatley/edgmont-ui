name: Publish Package

on:
  push:
    branches:
      - main

  workflow_dispatch:

env:
  CI: true
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0

      - name: Setup Git
        run: git config user.email "$GITHUB_ACTOR@users.noreply.github.com" && git config user.name "$GITHUB_ACTOR"

      - uses: actions/setup-node@v2.5.0
        with:
          node-version: 16.x

      - name: Cache Dependencies
        id: cache-node
        uses: actions/cache@v2.1.7
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os}}-node-

      - name: Install Dependencies
        if: steps.cache-node.output.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive --silent --prefer-offline

      - name: Build
        run: yarn build

      - name: Publish Major
        id: publish-major
        if: ${{ github.event.label.name == 'release-major' }}
        run: yarn publish --major

      - name: Publish Minor
        id: publish-minor
        if: ${{ github.event.label.name == 'release-minor' }}
        run: yarn publish --minor

      - name: Publish Patch
        if: ${{ github.event.label.name != 'release-major' && github.event.label.name != 'release-minor' }}
        run: yarn publish --patch

      - name: Publish
        run: git push origin main

      - name: Get Tag
        run: |
          export TAG=$(git describe)
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: ${{ env.TAG }}
          draft: false
          prerelease: false
